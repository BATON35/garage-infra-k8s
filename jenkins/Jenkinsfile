pipeline {
  agent any

  environment {
    HELM_HOME = './helm/umbrella'
    HELM_PATH = "${WORKSPACE}/.helm/bin"
    PATH = "${WORKSPACE}/.helm/bin:/usr/local/bin:/usr/bin:/bin"
  }

  stages {
    stage('Smoke Test') {
      steps {
        echo '✅ Jenkins działa 🎉'
      }
    }

    stage('Checkout') {
      steps {
        checkout scm
        echo "📦 Kod źródłowy pobrany z repozytorium"
      }
    }

    stage('Install Helm Temporarily') {
      steps {
        sh '''
          curl -fsSL https://get.helm.sh/helm-v3.18.4-linux-amd64.tar.gz -o helm.tar.gz
          tar -zxvf helm.tar.gz
          mkdir -p .helm/bin
          mv linux-amd64/helm .helm/bin/helm
          echo "✅ Helm zainstalowany tymczasowo"
          helm version
        '''
      }
    }

    stage('Install kubectl Temporarily') {
      steps {
        sh '''
          curl -LO "https://dl.k8s.io/release/v1.29.0/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mv kubectl .helm/bin/kubectl
          kubectl version --client
        '''
        echo "📦 Kubectl zainstalowany tymczasowo"
      }
    }

    stage('Prepare Helm Dependencies') {
      steps {
        sh 'helm dependency update ./helm/umbrella'
        echo "🔧 Zależności Helm zaktualizowane"
      }
    }

    stage('Create Namespace') {
      steps {
        sh '''
          kubectl create namespace garage-core || echo "garage-core namespace already exist. 👀"
          kubectl get namespace garage-core --output=name
        '''
      }
    }

    stage('Deploy Microservices') {
      steps {
        sh '''
          helm upgrade --install platform ./helm/umbrella -f ./helm/umbrella/values.yaml --namespace garage-core
        '''
        echo "🚀 Mikroserwisy wdrożone"
      }
    }

    stage('Verify Rollouts') {
      steps {
        sh '''
          kubectl rollout status deployment/discovery-service -n garage-core || echo '❌ Discovery-service nie gotowy'
          kubectl rollout status deployment/vehicle-service -n garage-core || echo '❌ Vehicle-service nie gotowy'
          kubectl rollout status deployment/api-gateway -n garage-core || echo '❌ API Gateway nie gotowy'
          kubectl rollout status deployment/vehicle-db -n garage-core || echo '❌ Vehicle-db nie gotowy'
        '''
        echo "🔍 Rollout-check zakończony"
      }
    }
  }
}
